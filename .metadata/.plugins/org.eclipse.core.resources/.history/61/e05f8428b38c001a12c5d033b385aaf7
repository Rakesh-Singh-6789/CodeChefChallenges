
public class level2 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int arr[]={4,30,50};
		int ans[]=solution(arr);
        for(int i:ans){
        	System.out.println(i);
        }
	}
	 public static int[] solution(int[] pegs) {
	        // Your code here
	        int pegNum=pegs.length;
	        int returnAnsIfNOt[]={-1,-1};
	        
	        if(pegNum<2){
    			System.out.println("here1");

	        	return returnAnsIfNOt;
	        }
	        
	        boolean isEvenLength=pegNum%2==0;
	        long sum=isEvenLength?(-pegs[0]+pegs[pegNum-1]):(-pegs[0]-pegs[pegNum-1]);
	        int minusOne=-1;
	        if(pegNum>2){
	        	for(int i=1;i<pegNum-1;i++){
	        		sum+=2*(Math.pow(minusOne,i+1))*pegs[i];
	        	}
	        }
	        
	        long r0=2*sum;
	        double copyRo=r0*1.0;
	        if(!isEvenLength){
	        	copyRo=(1/3)*(copyRo);
	        }
	        
	        if(copyRo<2){
    			System.out.println("here2");
 	           return returnAnsIfNOt;

	        }
	        
	        
	        	double radius=1.0*r0;
	        	
	        	for(int i=0;i<pegNum-2;i++){
	        		double tempRadius=pegs[i+1]-pegs[i];
	        		double anotherRadius=tempRadius-radius;
	        		if(anotherRadius<1 || radius <1 ){
	        			System.out.println("here3");

	        			return returnAnsIfNOt;
	        		}else{
	        			radius=anotherRadius;
	        		}
	        		
	        	}
	        	
	        	
	        if(isEvenLength){
	        	int ans[]={(int)r0,1};
	        	return ans;
	        }else{
	        	int ans[]={(int)r0,3};
	        	return ans;
	        }
	        
	        
	        
	    }

}
