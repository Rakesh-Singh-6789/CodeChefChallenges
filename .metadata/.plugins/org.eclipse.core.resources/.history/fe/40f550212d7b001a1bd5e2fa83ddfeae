import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.math.BigInteger;
import java.util.StringTokenizer;

public class SquaredSubsequence {

	 static private PrintWriter out=new PrintWriter(System.out);
		static public void main(String[] args) throws Exception{
			BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
			int t=Integer.parseInt(br.readLine());


			while(t-->0){
				solve(br);	
			}
	       
			out.flush();
			out.close();
		}
		private static void solve(BufferedReader br) throws Exception{
			// TODO Auto-generated method stub
			
			int n=Integer.parseInt(br.readLine());
			int arr[]=new int[n];
			long count=0;
			BigInteger biTwo=BigInteger.valueOf(2);
			BigInteger biFour=BigInteger.valueOf(4);
			BigInteger biZero=BigInteger.ZERO;
			
			StringTokenizer st=new StringTokenizer(br.readLine());
			for(int i=0;i<n;i++){
				arr[i]=Integer.parseInt(st.nextToken());
			    if(arr[i]%2!=0 || arr[i]%4==0){
			    	count++;
			    }
			}
			
			for(int i=0;i<n-1;i++){
				//BigInteger biProduct=BigInteger.valueOf(arr[i]);
				
				int even=arr[i]%2==0?1:0;
				
				for(int j=i+1;j<n;j++){
					int num=arr[j];
					if(num%2==0){
						even++;
						if(even>1){
							//out.println("ind "+j+" "+num);
							count+=n-j;
							break;
						}
					}					
				}
				if(even==0){
					//out.println("index i "+i);
					count++;
				}
				
			}
			
			out.println(count);
			
		}

}
